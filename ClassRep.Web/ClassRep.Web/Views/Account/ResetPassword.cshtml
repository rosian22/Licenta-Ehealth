@model Cube.Mlm.Models.ResetPasswordViewModel
@{
    Layout = "../Shared/_LayoutLogin.cshtml";
}
@section Css{
    @Styles.Render("~/Content/forgotpassword")
}

<div class="entity-container reset-password-container">
    <div class="app-logo margin-top-20"><img src="@Url.Content("/images/logo-blue.png")" /></div>
    <form class="margin-top-20 pull-left" id="reset-password-request-form">

        @Html.HiddenFor(model => model.Token)

        <div class="entity-column">
            <div class="row-entry">
                @*@Html.LabelFor(m => m.Password, new { @class = "col-md-10 control-label" })*@
                @Html.PasswordFor(m => m.Password, new { @class = "form-control password-input", @placeholder = "Password", })
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger", })
            </div>
            <div class="row-entry">
                @*@Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-10 control-label" })*@
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = " form-control password-input", @placeholder = "Confirm Password", })
                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger", })
            </div>
            <div class="margin-bottom-20">
                <input type="text" class="btn-primary reset-password-button" onclick="performResetPassword();" value="Reset Password" />
            </div>
            <div class="margin-bottom-20">
                <p class="p-password ">Your password must have a minimum of 6 characters consisting of at least 1 upper and lower case, numerical and a special character [!,@@,#,$,%,&]</p>
            </div>
        </div>
    </form>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">

        function performResetPassword() {
            debugger;
            var form = $("#reset-password-request-form");
            if (!validateForm("reset-password-request-form")) {
                return false;
            }

            var postData = {
                Password: $("#reset-password-request-form input[name='Password']").val(),
                ConfirmPassword: $("#reset-password-request-form input[name='ConfirmPassword']").val(),
                Token: $("#reset-password-request-form input[name='Token']").val(),
            };
         
            $.ajax({
                type: "POST",
                url: "/Account/ResetPassword",
                data: $(form).serialize(),
                processData: false,
                success: function (response) {
                    $("#error-placeholder").html("");
                    if (response !== undefined && response.Success !== undefined && response.Success) {
                        toastrModule.showSuccess("Your password was successfully updated");

                        setTimeout(function () {
                            window.location.href = window.location.origin;
                        }, 3000);
                    }
                    else {
                        if (response.StatusCode && response.StatusCode === 75) {
                            $("#error-placeholder").html("Your reset password link has expired");
                            toastrModule.showError("Your reset password link has expired");
                        }
                        else if (response.Data && response.Data.length) {
                            for (var i = 0; i < response.Data.length; i++) {
                                toastrModule.showError(response.Data[i]);
                                $("#error-placeholder").html("<p>" + response.Data[i] + "</p>");
                            }
                        }
                        else {
                            $("#error-placeholder").html("Failed to update your password");
                            toastrModule.showError("Failed to update your password");
                        }
                    }
                },
                error: function (error) {
                    console.log(error);
                    toastrModule.showError("An error occurred");
                }
            });

            return false;
        }
    </script>
}

